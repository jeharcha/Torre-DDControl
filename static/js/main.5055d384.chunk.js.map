{"version":3,"sources":["components/board/flight.js","socketFile.js","components/board/board.js","components/chat/useChat.js","components/chat/chatRoom.js","components/map/Aircraft.png","components/map/map.jsx","App.js","index.js"],"names":["Flight","thisFlight","Card","Body","code","Text","airline","origin","destination","plane","passengers","map","passenger","name","age","Footer","socket","socketio","connect","transports","path","SocketContext","React","createContext","Board","boardSocket","useContext","useState","seats","flightObjects","setFlightObjects","handleFlights","useCallback","currentFlights","useEffect","emit","on","flights","console","log","className","flightObject","NEW_CHAT_MESSAGE_EVENT","useChat","messageObjects","setMessageObjects","socketRef","useRef","current","socketIOClient","incomingMessageObject","disconnect","sendMessageObject","senderName","messageBody","message","ChatRoom","props","newMessage","setNewMessage","SENDER_NAME","messageObject","i","Date","date","toUTCString","substr","value","onChange","event","key","keyCode","target","placeholder","onClick","Map","LatLngBounds","colorOptions","color","setFlightsList","setLen","polylinesList","setPolylinesList","flight","length","rel","href","integrity","crossorigin","src","id","MapContainer","center","zoom","scrollWheelZoom","TileLayer","url","polyline","Polyline","pathOptions","positions","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5055d384.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport '../../styles/index.css';\r\n\r\nconst Flight = ({ thisFlight }) => {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5> Flight N°: {thisFlight.code}</h5>\r\n        <Card.Text>\r\n          <p> Airline: {thisFlight.airline} </p>\r\n          <p> Origin: {thisFlight.origin}</p>\r\n          <p> Destionation: {thisFlight.destination}</p>\r\n          <p> Plane: {thisFlight.plane}</p>\r\n          <strong> Passengers:</strong>\r\n          {thisFlight.passengers.map((passenger) => (\r\n            <div>\r\n              <li>Name: {'\\n' + passenger.name}</li>\r\n              <li>Age: {passenger.age}</li>\r\n            </div>\r\n          ))}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer></Card.Footer>\r\n    </Card>\r\n\r\n    // <div className=\"flight-card\">\r\n    //   <p> Flight N°: {thisFlight.code}</p>\r\n    //   <p> Airline: {thisFlight.airline} </p>\r\n    //   <p> Origin: {thisFlight.origin}</p>\r\n    //   <p> Destionation: {thisFlight.destination}</p>\r\n    //   <p> Plane: {thisFlight.plane}</p>\r\n    //   <p> Pasangers:</p>\r\n    //   {thisFlight.passengers.map((passanger) => (\r\n    //     <div>\r\n    //       <li>Name: {passanger.name}</li>\r\n    //       <li>Age: {passanger.age}</li>\r\n    //     </div>\r\n    //   ))}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Flight;\r\n","import socketio from 'socket.io-client';\r\nimport React from 'react';\r\n\r\nexport const socket = socketio.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\r\n  transports: ['websocket'],\r\n  path: '/flights',\r\n});\r\n\r\nexport const SocketContext = React.createContext();\r\n","import React, { useEffect, useState, useCallback, useContext } from 'react';\r\nimport Flight from './flight.js';\r\nimport '../../styles/index.css';\r\nimport { Card, CardGroup } from 'react-bootstrap';\r\n// import { SocketContext } from '../dashboard';\r\nimport { SocketContext } from '../../socketFile.js';\r\n\r\nconst Board = ({}) => {\r\n  const boardSocket = useContext(SocketContext);\r\n  const [flightObjects, setFlightObjects] = useState([\r\n    {\r\n      code: '',\r\n      airline: '',\r\n      origin: [0, 0],\r\n      destination: [0, 0],\r\n      plane: '',\r\n      seats: 0,\r\n      passengers: [{ name: '', age: 0 }],\r\n    },\r\n  ]);\r\n  const handleFlights = useCallback((currentFlights) => {\r\n    setFlightObjects(currentFlights);\r\n  }, []);\r\n  useEffect(() => {\r\n    boardSocket.emit('FLIGHTS', {});\r\n    // Listen to Flights Events, passes the list of them to the FlightHandle function.\r\n    boardSocket.on('FLIGHTS', (flights) => handleFlights(flights));\r\n    console.log(flightObjects);\r\n\r\n    return () => {};\r\n  }, [flightObjects, boardSocket, handleFlights]);\r\n\r\n  return (\r\n    // <div> Hola</div>\r\n    <div>\r\n      <p>Flights Board</p>\r\n      {/* <CardGroup>\r\n        {flightObjects.map((flightObject) => (\r\n          <Flight thisFlight={flightObject} />\r\n        ))}\r\n      </CardGroup> */}\r\n      <div className=\"row-container\">\r\n        {flightObjects.map((flightObject) => (\r\n          <Flight thisFlight={flightObject} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst SOCKET_SERVER_URL = 'wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\r\nconst NEW_CHAT_MESSAGE_EVENT = 'CHAT';\r\n\r\nconst useChat = () => {\r\n  const [messageObjects, setMessageObjects] = useState([]); // Sent and received messages\r\n  const socketRef = useRef();\r\n  useEffect(() => {\r\n    // Creates a WebSocket connection\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      path: '/flights',\r\n      transports: ['websocket'],\r\n    });\r\n\r\n    // Listens for incoming messages\r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (incomingMessageObject) => {\r\n      setMessageObjects((messageObjects) => [...messageObjects, incomingMessageObject]);\r\n    });\r\n\r\n    // Destroys the socket reference\r\n    // when the connection is closed\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Sends a message to the server that\r\n  // forwards it to all users in the same room\r\n\r\n  const sendMessageObject = (senderName, messageBody) => {\r\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n      name: senderName,\r\n      message: messageBody,\r\n    });\r\n  };\r\n\r\n  return { messageObjects, sendMessageObject };\r\n};\r\n\r\nexport default useChat;\r\n","import '../../styles/index.css';\r\nimport '../../styles/chatRoom.css';\r\nimport React from 'react';\r\nimport useChat from './useChat';\r\nimport { useState } from 'react';\r\n\r\n// const SOCKET_SERVER_URL = 'http://localhost:4000';\r\n// const SOCKET_SERVER_URL = 'http://tarea-3-websocket.2021-1.tallerdeintegracion.cl';\r\n// const NEW_CHAT_MESSAGE_EVENT = 'CHAT';\r\n\r\nconst ChatRoom = (props) => {\r\n  const { messageObjects, sendMessageObject } = useChat(); // Creates a websocket and manages messaging\r\n  const [newMessage, setNewMessage] = useState(''); // Message to be sent\r\n  const SENDER_NAME = 'Navon ';\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    // Checks wether the change was becouse of an Enter key press event,\r\n    // so the newMessage Variable dos not update itsvalue\r\n    if (event.key !== 'Enter' && event.keyCode !== 13) setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    sendMessageObject(SENDER_NAME, newMessage);\r\n    setNewMessage('');\r\n  };\r\n\r\n  // const handleKeyPressEvent = (theEvent) => {\r\n  //   if (theEvent.key === 'Enter') {\r\n  //     if (newMessage) {\r\n  //       handleSendMessage();\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"chat-room-container\">\r\n      <h4 className=\"room-name\">Control Tower Chat</h4>\r\n      <div className=\"messages-container\">\r\n        <ol className=\"messages-list\">\r\n          {messageObjects.map((messageObject, i) => (\r\n            <li\r\n              key={i}\r\n              className={`message-item ${\r\n                messageObject.name === SENDER_NAME ? 'my-message' : 'received-message'\r\n              }`}\r\n            >\r\n              ({new Date(messageObject.date).toUTCString().substr(0, 25)})\r\n              {'\\n' + messageObject.name} {': '}\r\n              {messageObject.message}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className=\"row-container\">\r\n        <textarea\r\n          value={newMessage}\r\n          onChange={handleNewMessageChange}\r\n          placeholder=\"Write message...\"\r\n          className=\"new-message-input-field\"\r\n          // onKeyPress={handleKeyPressEvent}\r\n        />\r\n        <button onClick={handleSendMessage} className=\"send-message-button\">\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","export default __webpack_public_path__ + \"static/media/Aircraft.d9efd3e7.png\";","// import '../../styles/index.css';\r\n// import { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\n\r\n// function Map() {\r\n//   return (\r\n//     <div>\r\n//       <link\r\n//         rel=\"stylesheet\"\r\n//         href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n//         integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\r\n//         crossOrigin=\"\"\r\n//       />\r\n//       <script\r\n//         src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\r\n//         integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\r\n//         crossOrigin=\"\"\r\n//       ></script>\r\n//       <div>Map</div>\r\n//       <div id=\"mapid\">\r\n//         <MapContainer\r\n//           className=\"leaflet-container\"\r\n//           center={[-33.45, -70.666667]}\r\n//           zoom={6}\r\n//           scrollWheelZoom={true}\r\n//         >\r\n//           <TileLayer\r\n//             // attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//           />\r\n//           <Marker position={[0, 0]}>\r\n//             {/* <Popup>\r\n//               A pretty CSS3 popup. <br /> Easily customizable.\r\n//             </Popup> */}\r\n//           </Marker>\r\n//         </MapContainer>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Map;\r\n\r\nimport 'C:/Users/Imagemaker/Documents/Ing UC/Taller de Integración/t4/control-tower/src/styles/index.css';\r\nimport React, { useState, useContext, useCallback, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, ImageOverlay } from 'react-leaflet';\r\nimport { LatLngBounds, Icon, L } from 'leaflet';\r\n// import { SocketContext } from 'C:Users/Imagemaker/Documents/Ing UC/Taller de Integración/t4/control-tower/src/socketFile.js';\r\nimport { SocketContext } from '../../socketFile.js';\r\nimport plane from './Aircraft.png';\r\n// import MyIcon from './MyIcon.jsx';\r\n\r\nfunction Map() {\r\n  // const polyline = [\r\n  //   [-34.82264, -58.533321],\r\n  //   [-33.382761, -70.803203],\r\n  // ]\r\n\r\n  const plane_url = 'https://cdn-0.emojis.wiki/emoji-pics/facebook/airplane-facebook.png';\r\n  // var myicon = new L.icon({iconUrl: plane, iconAnchor: new L.Point(16, 16)});\r\n  const bounds = new LatLngBounds([-34.82264, -58.533321], [-33.382761, -70.803203]);\r\n\r\n  const limeOptions = { color: 'lime' };\r\n  const redOptions = { color: 'red' };\r\n  const blueOptions = { color: 'blue' };\r\n  const orangeOptions = { color: 'orange' };\r\n  const purpleOptions = { color: 'violet' };\r\n  const colorOptions = [limeOptions, redOptions, blueOptions, orangeOptions, purpleOptions];\r\n  const socket = useContext(SocketContext);\r\n\r\n  const [flightsList, setFlightsList] = useState([]);\r\n  // const [positionsDict, setPositionsDict] = useState({});\r\n  const [len, setLen] = useState(0);\r\n  const [polylinesList, setPolylinesList] = useState([]);\r\n  const [polylinesColors, setPolylinesColors] = useState([]);\r\n\r\n  const handleFlights = useCallback((flights) => {\r\n    flights.map((flight) =>\r\n      setPolylinesList((polylinesList) => [...polylinesList, [flight.origin, flight.destination]]),\r\n    );\r\n    setLen(flights.length);\r\n    setFlightsList(flights);\r\n  }, []);\r\n\r\n  // const handlePositions = useCallback((pos) => {\r\n  //   // console.log(pos)\r\n  //   // for (let index = 0; index < len; index++) {\r\n  //   //   const flight = flightsList[index];\r\n  //   //   if (flight.code === pos.code){\r\n\r\n  //   //   }\r\n  //   // }\r\n  //   console.log(positionsDict);\r\n  //   if (positionsDict[pos.code]) {\r\n  //     setPositionsDict( (positionsDict) =>  positionsDict[pos.code].push([pos.position[0], pos.position[1]]));\r\n  //   }\r\n  //   else {\r\n  //     setPositionsDict( (positionsDict) =>  positionsDict[pos.code] = [[pos.position[0], pos.position[1]]]);\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    // as soon as the component is mounted, do the following tasks:\r\n    // subscribe to socket events\r\n    socket.emit('FLIGHTS', {});\r\n    //receive events\r\n    socket.on('FLIGHTS', (flights) => handleFlights(flights));\r\n\r\n    return () => {};\r\n  }, [socket, handleFlights]);\r\n\r\n  return (\r\n    <div>\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n        integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\r\n        crossorigin=\"\"\r\n      />\r\n      <script\r\n        src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\r\n        integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\r\n        crossorigin=\"\"\r\n      ></script>\r\n      <div>Real Time Map</div>\r\n      <div id=\"mapid\">\r\n        <MapContainer\r\n          center={[-38.45, -70.666667]}\r\n          zoom={4}\r\n          scrollWheelZoom={true}\r\n          className=\"leaflet-container\"\r\n        >\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          {/* <ImageOverlay\r\n            url={plane_url}\r\n            bounds={bounds}\r\n            zIndex={10}\r\n          /> */}\r\n          {polylinesList.map((polyline, i) => (\r\n            <Polyline pathOptions={colorOptions[i % 4]} positions={polyline} />\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Map;\r\n","import React from 'react';\r\nimport Board from './components/board/board.js';\r\nimport ChatRoom from './components/chat/chatRoom.js';\r\nimport Map from './components/map/map.jsx';\r\n// import { socketio } from 'socket.io-client';\r\nimport { SocketContext, socket } from './socketFile';\r\n\r\n// const socket = socketio.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\r\n//   transports: ['websocket'],\r\n//   path: '/flights',\r\n// });\r\n\r\nfunction App() {\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      <div className=\"container\">\r\n        <div className=\"up-left-box\">\r\n          <Map />\r\n        </div>\r\n        <div className=\"right-column\">\r\n          <ChatRoom />\r\n        </div>\r\n        <div className=\"bottom-left-box\">\r\n          <Board />\r\n        </div>\r\n      </div>\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// export const SocketContext = React.createContext();\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}